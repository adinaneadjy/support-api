name: CI

# Quand le workflow se lance :
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # --- JOB 1 : Vérification du code ---
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      # 1. Récupérer le code
      - uses: actions/checkout@v4

      # 2. Installer Node.js
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 3. Installer les dépendances
      - name: Install dependencies
        run: npm ci

      # 4. Lancer ESLint
      - name: Run ESLint
        run: npm run lint

      # 5. Vérifier le formatage Prettier
      - name: Run Prettier check
        run: npm run format:check

  # --- JOB 2 : Lancer les tests ---
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: code-quality  # Ne démarre que si code-quality est OK

    # Service MongoDB dans Docker
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping:1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Attendre que MongoDB soit prêt
      - name: Wait for MongoDB
        run: |
          for i in {1..30}; do
            if mongo --eval 'db.runCommand({ping:1})' >/dev/null 2>&1; then
              echo "MongoDB is ready"
              break
            fi
            echo "Waiting for MongoDB..."
            sleep 2
          done

      # Lancer les tests Jest
      - name: Run Tests
        env:
          MONGO_URI: mongodb://localhost:27017/support-api-test
        run: npm test

      # Sauvegarder le rapport de couverture Jest
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
